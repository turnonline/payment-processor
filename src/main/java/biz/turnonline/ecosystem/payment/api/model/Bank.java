/*
 * Payment Processor
 * TurnOnline.biz Ecosystem Payment Processor
 *
 * OpenAPI spec version: 1.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package biz.turnonline.ecosystem.payment.api.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;

/**
 * Bank
 */
public class Bank
{
    @JsonProperty( "code" )
    private String code = null;

    @JsonProperty( "label" )
    private String label = null;

    @JsonProperty( "country" )
    private String country = null;

    public Bank code( String code )
    {
        this.code = code;
        return this;
    }

    /**
     * The country specific numeric bank code, taken from the code-book.
     **/
    @JsonProperty( "code" )
    public String getCode()
    {
        return code;
    }

    public void setCode( String code )
    {
        this.code = code;
    }

    public Bank label( String label )
    {
        this.label = label;
        return this;
    }

    /**
     * The localized name of the bank, taken from the code-book and based on either default or specified language.   The value will be managed by the service once Accept-Language header will be provided while bank account getting.
     **/
    @JsonProperty( "label" )
    public String getLabel()
    {
        return label;
    }

    public void setLabel( String label )
    {
        this.label = label;
    }

    public Bank country( String country )
    {
        this.country = country;
        return this;
    }

    /**
     * The country of the bank where bank account has been opened. The missing value will be taken from the codebook if that combination is being found. The ISO 3166 alpha-2 country code. Itâ€™s case insensitive.  Note: Currently supported only SK and CZ.
     **/
    @JsonProperty( "country" )
    public String getCountry()
    {
        return country;
    }

    public void setCountry( String country )
    {
        this.country = country;
    }

    @Override
    public boolean equals( Object o )
    {
        if ( this == o )
        {
            return true;
        }
        if ( o == null || getClass() != o.getClass() )
        {
            return false;
        }
        Bank bank = ( Bank ) o;
        return Objects.equals( this.code, bank.code ) &&
                Objects.equals( this.label, bank.label ) &&
                Objects.equals( this.country, bank.country );
    }

    @Override
    public int hashCode()
    {
        return Objects.hash( code, label, country );
    }

    @Override
    public String toString()
    {
        return "class Bank {\n" +
                "    code: " + toIndentedString( code ) + "\n" +
                "    label: " + toIndentedString( label ) + "\n" +
                "    country: " + toIndentedString( country ) + "\n" +
                "}";
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString( Object o )
    {
        if ( o == null )
        {
            return "null";
        }
        return o.toString().replace( "\n", "\n    " );
    }
}

